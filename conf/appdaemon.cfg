[AppDaemon]
ha_url = [HASS_IP]
ha_key = [HASS_PASSWORD]

logfile = /home/homeassistant/appdaemon.log
errorfile = /home/homeassistant/appdaemon_err.log
app_dir = /home/homeassistant/appdaemon_apps/apps
threads = 20

# EXTRA - common vars
notifier = notify.ios_iphone
media_player = media_player.kodi
kodi_ip = [KODI_IP]
kodi_port = [KODI_PORT]
kodi_user = [KODI_USER]
kodi_pass = [KODI_PASSWORD]
media_player_mopidy = media_player.dormitorio_mopidy


[ALARM]
module = motion_alarm_push_email
class = MotionAlarm
# path_base_data = /mnt/usbdrive
path_base_data = /home/homeassistant/.homeassistant
path_ha_conf = /home/homeassistant/.homeassistant
# ------------------------------------------------------
# Configuración notifiers
# ------------------------------------------------------
push_notifier = notify/ios_iphone
email_notifier = notify/gmail

# Usar pushbullet notificaciones (vs text email, default = True)
usar_push_notifier = True

# ------------------------------------------------------
# Configuración raw binary sensors
# ------------------------------------------------------

#raw_binary_sensors = binary_sensor.vibration_sensor_raw_rpi2h,binary_sensor.sound_sensor_raw_rpi2h
#raw_binary_sensors_sufijo =  _raw
#raw_binary_sensors_time_off = 2

# ------------------------------------------------------
# Configuración entidades de HA
# ------------------------------------------------------

# Sensores de activación y switchs de uso (use default: True)
pirs = binary_sensor.pir_salon,binary_sensor.pir_estudio_rpi2h
use_pirs = switch.use_pir_salon,switch.use_pir_estudio_rpi2h
camera_movs = binary_sensor.motioncam_salon,binary_sensor.motioncam_estudio
use_cam_movs = switch.motioncam_escam,switch.motioncam_estudio
extra_sensors = binary_sensor.vibration_sensor_rpi2h,binary_sensor.sound_sensor_rpi2h
use_extra_sensors = switch.use_vibration_sensor_rpi2h,switch.use_sound_sensor_rpi2h

# Cámaras, ip y params para jpg request
# cameras = camera.escam_qf001,camera.picamera_salon,camera.picamera_estudio
cameras = camera.escam_qf001,camera.picamera_estudio
# cameras_jpg_ip_secret = motioneye_jpg_cam_1,hasscam_jpg_cam_3,motioneye_jpg_cam_2
cameras_jpg_ip_secret = motioneye_jpg_cam_1,motioneye_jpg_cam_2
# cameras_jpg_params_secret = foscam_url_cam_1_params,foscam_url_cam_2_params

# Interruptor de alarma y de modo silencioso (sin turn on relés)
main_switch = switch.switch_master_alarm
# silent_mode = input_boolean.silent_mode

# Actuadores en caso de activación
rele_sirena = light.flexo
# rele_sirena = switch.rele_de_sirena
# rele_sirena = switch.rele_1
# rele_secundario = switch.rele_2
# Avisador de actividad / prealarma / activación (opc)
# led_act = switch.rele_de_sirena

# Configuración de sensibilidad
# ------------------------------------------------------
# Parámetro de tiempo de espera desde conexión a armado de alarma:
espera_a_armado_sec = 5
# Parámetro de tiempo de espera en pre-alarma para conectar la alarma si ocurre un nuevo evento:
reset_prealarm_time_sec = 10
# Segundos entre captura de eventos con la alarma conectada
min_delta_sec_events = 2
delta_secs_trigger = 15
# Número de eventos máximo a incluir por informe en correo electrónico. Se limita eliminando eventos de baja prioridad
num_max_eventos_por_informe = 10
# Hora de envío del informe diario de eventos detectados (si los ha habido). Comentar con # para desactivar
hora_informe = 10:30

#manual_trigger = input_boolean.state_master_alarm
#light_notify = light.cuenco
#lights_alarm = light.bola_pequena,light.pie_sofa,light.bola_grande,light.pie_tv,light.lamparita,light.aura_habitacion,light.hue_habitacion
#constrain_input_boolean = input_boolean.switch_master_alarm

[IOSFeedback]
module = ios_events_listener
class = EventListener

[MotionLightsSalon]
module = motion_lights
class = MotionLights
pir = binary_sensor.pir_salon
lights_motion = light.bola_grande,light.bola_pequena,light.cuenco
lights_check_off = light.pie_sofa,light.lamparita,light.pie_tv
motion_light_timeout = input_slider.light_duration_after_motion
constrain_input_boolean = input_boolean.switch_motion_lights
constrain_input_boolean_2 = input_boolean.switch_master_alarm
constrain_start_time = sunset - 02:00:00
constrain_end_time = sunrise + 03:00:00

#[MotionLightsEstudio]
#module = motion_lights
#class = MotionLights
#pir = binary_sensor.pir_estudio_rpi2h
#lights_motion = light.flexo
##motion_light_timeout = input_slider.light_duration_after_motion
#motion_light_timeout = 5
#constrain_input_boolean = input_boolean.switch_motion_lights
#constrain_input_boolean_2 = input_boolean.switch_master_alarm
#constrain_start_time = sunset - 02:00:00
#constrain_end_time = sunrise + 03:00:00

[MorningAlarmClock]
module = morning_alarm_clock
class = AlarmClock
alarm_time = sensor.alarm_clock_time
alarmdays = mon,tue,wed,thu,fri,sat
lights_alarm = group.luces_dormitorio
sunrise_duration = 300
constrain_input_boolean = input_boolean.alarm_clock_status
room_select = input_select.room_altavoces
manual_trigger = input_boolean.manual_trigger_lacafetera

[KodiNotifier_no_amb]
module = kodi_ambient_lights
class = KodiAssistant
lights_dim = light.bola_pequena,light.pie_sofa,light.lamparita,light.cuenco,light.pie_tv
lights_off = light.bola_grande
constrain_input_boolean = switch.toggle_kodi_ambilight,off

[KodiNotifier_amb]
module = kodi_ambient_lights
class = KodiAssistant
lights_dim = light.pie_sofa
lights_off = light.bola_grande
constrain_input_boolean = switch.toggle_kodi_ambilight

[EnerpiPeakNotifier]
module = enerpi_alarm
class = EnerpiPeakNotifier
#max_power_kw = 1.5
#max_power_kw_reset = 1.0
max_power_kw = input_slider.enerpi_max_power
max_power_kw_reset = input_slider.enerpi_max_power_reset
min_time_high = 15
min_time_low = 60
control = sensor.enerpi_power
camera = camera.enerpi_tile_power
constrain_input_boolean = input_boolean.switch_control_enerpi_max_power
